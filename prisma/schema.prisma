// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id                  String        @id @default(uuid())
  role                Role          @default(extra)
  first_name          String
  last_name           String
  created_at          DateTime      @default(now())
  updated_at          DateTime      @updatedAt
  address             Location      @relation(fields: [locationId], references: [id])
  locationId          String
  email               String        @unique
  birthdate           DateTime
  phone               String?
  active              Boolean       @default(true)
  missions            Mission[]     @relation("CreatedMissions")
  assignedMissions    UserMission[]
  missionJob          MissionJob    @default(waiter)
  max_travel_distance Int
}

model Location {
  id       String    @id @default(uuid())
  lat      Int
  lon      Int
  fullName String
  users    User[]
  missions Mission[]
}

model Mission {
  id           String        @id @default(uuid())
  name         String
  description  String?
  location     Location      @relation(fields: [locationId], references: [id])
  locationId   String
  mission_date DateTime
  creator      User          @relation("CreatedMissions", fields: [creatorId], references: [id])
  creatorId    String
  employees    UserMission[]
}

model UserMission {
  id          String     @id @default(uuid())
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  mission     Mission    @relation(fields: [missionId], references: [id])
  missionId   String
  start_date  DateTime
  missionJob  MissionJob
  duration    Int
  hourly_rate Float

  @@unique([userId, missionId])
}

enum MissionJob {
  waiter
  cook
  both
}

enum Role {
  extra
  company
}
